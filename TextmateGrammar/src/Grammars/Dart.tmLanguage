<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>dart</string>
    <string>dart6</string>
	</array>
	<key>name</key>
	<string>Dart</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>^(#!.*)$</string>
			<key>name</key>
			<string>meta.preprocessor.script.dart</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*\b(library|import|export|part of|part)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.dart</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.dart</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.dart</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as|show|hide|deferred)\b</string>
					<key>name</key>
					<string>keyword.other.import.dart</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants-and-special-vars</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl-typedef</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl-class</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl-enum</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decl-function</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>annotation.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.annotation.dart</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.dart</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(?:\s*)((@)([a-zA-Z0-9_]+))</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.dart</string>
						</dict>
					</dict>
					<key>match</key>
					<string>/\*\*/</string>
					<key>name</key>
					<string>comment.block.empty.dart</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments-inline</string>
				</dict>
			</array>
		</dict>
		<key>comments-inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.dart-doccomments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(///)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>marker.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.triple-slash.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.dart-doccomments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>marker.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.double-slash.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.dart-doccomments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants-and-special-vars</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false|null)\b</string>
					<key>name</key>
					<string>constant.language.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this|super)\b</string>
					<key>name</key>
					<string>variable.language.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
					<key>name</key>
					<string>constant.numeric.dart</string>
				</dict>
			</array>
		</dict>
		<key>decl-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\bclass\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.new.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.declaration.class.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[A-Za-z_][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>class.name.dart</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>decl-enum</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\benum\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={)</string>
					<key>name</key>
					<string>meta.declaration.enum.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[A-Za-z_][A-Za-z0-9_]*</string>
							<key>name</key>
							<string>enum.name.dart</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>decl-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.primitive.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A getter with a primitive return type.</string>
					<key>match</key>
					<string>^\s*(?:\b(void|bool|num|int|double|dynamic|var|String|List|Map)\b)\s+(get)\s+(\w+)\s+(?==&gt;)</string>
					<key>name</key>
					<string>meta.declaration.function.dart</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>type.user-defined.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A getter with a user-defined return type or no return type.</string>
					<key>match</key>
					<string>^\s*(?:\b(\w+)\b\s+)?(get)\s+(\w+)\s+(?==&gt;)</string>
					<key>name</key>
					<string>meta.declaration.function.dart</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(set)\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A setter.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.declaration.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?:\b(void|bool|num|int|double|dynamic|var|String|List|Map)\b)\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.primitive.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A function with a primitive return type.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.declaration.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?:\b(return)\b)\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A function invocation after 'return'</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.invocation.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*\b(new)\b\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A class instantiation after 'new'</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.invocation.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments-inline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>decl-function-parameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constants-and-special-vars</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:\b(void|bool|num|int|double|dynamic|var|String|List|Map)\b)\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.primitive.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A function with a primitive return type.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.parameter.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(new)\b\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A class instantiation after 'new'</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.invocation.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:\b(\w+)\b)\s+(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>type.user-defined.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A function with a user-defined return type.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.parameter.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\w+)(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>function.name.dart</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A function with no return type.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.parameter.function.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#decl-function-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keywords</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>decl-typedef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>typedef</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.new.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.dart</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.declaration.typedef.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.primitive.dart</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>typedef.return.dart</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>typedef.name.dart</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?:\b(void|bool|num|int|double|dynamic|var|String|List|Map)\b|([a-zA-Z_][a-zA-Z0-9_]*))\s+([a-zA-Z_][a-zA-Z0-9_]+)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>\)</string>
							<key>name</key>
							<string>typedef.params.dart</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#keywords</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bassert\b</string>
					<key>name</key>
					<string>keyword.control.assert.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bas\b</string>
					<key>name</key>
					<string>keyword.cast.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(try|catch|finally|throw|on|rethrow)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\s+\?\s+|\s+:\s+</string>
					<key>name</key>
					<string>keyword.control.ternary.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|continue|default|do|else|for|if|in|return|switch|while)\b</string>
					<key>name</key>
					<string>keyword.control.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(async\*|async|await\*|await|yield)\b</string>
					<key>name</key>
					<string>keyword.control.async.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(new)\b</string>
					<key>name</key>
					<string>keyword.control.new.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(abstract|extends|external|factory|implements|with|interface|get|native|operator|set|typedef)\b</string>
					<key>name</key>
					<string>keyword.declaration.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(is\!?)\b</string>
					<key>name</key>
					<string>keyword.operator.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(&lt;&lt;|&gt;&gt;&gt;?|~|\^|\||&amp;)</string>
					<key>name</key>
					<string>keyword.operator.bitwise.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((&amp;|\^|\||&lt;&lt;|&gt;&gt;&gt;?)=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.bitwise.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(===?|!==?|&lt;=?|&gt;=?)</string>
					<key>name</key>
					<string>keyword.operator.comparison.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(([+*/%-]|\~)=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.arithmetic.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|\/|\~\/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(!|&amp;&amp;|\|\|)</string>
					<key>name</key>
					<string>keyword.operator.logical.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(static|final|const)\b</string>
					<key>name</key>
					<string>storage.modifier.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:void|bool|num|int|double|dynamic|var|String|List|Map)\b</string>
					<key>name</key>
					<string>storage.type.primitive.dart</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[^'"]</string>
					<key>name</key>
					<string>constant.character.escaped.regex.dart</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>contentName</key>
					<string>meta.capture.regex.dart</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\?(:|=|!)</string>
							<key>name</key>
							<string>ignore.capture.regex.dart</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regex.dart</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\*|\+|\?|\.|\|</string>
					<key>name</key>
					<string>keyword.other.regex.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^|\$</string>
					<key>name</key>
					<string>keyword.other.regex.dart</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.other.regex.dart</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(\^)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.negation.regex.dart</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>constant.character.range.regex.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[^"']</string>
							<key>name</key>
							<string>constant.character.escaped.regex.dart</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\{(?:\d+)?,(?:\d+)?\}</string>
					<key>name</key>
					<string>keyword.other.regex.dart</string>
				</dict>
			</array>
		</dict>
		<key>string-interp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\$)(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.dart</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.dart</string>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.dart</string>
						</dict>
					</dict>
					<key>name</key>
					<string>interpolation.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.dart</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.dart</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)(\w+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.dart</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!r)"""</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>name</key>
					<string>string.interpolated.triple.double.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-interp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!r)'''</string>
					<key>end</key>
					<string>'''(?!')</string>
					<key>name</key>
					<string>string.interpolated.triple.single.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-interp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>r"""</string>
					<key>end</key>
					<string>"""(?!")</string>
					<key>name</key>
					<string>string.quoted.triple.double.dart</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>r'''</string>
					<key>end</key>
					<string>'''(?!')</string>
					<key>name</key>
					<string>string.quoted.triple.single.dart</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\\|r)"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.interpolated.double.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\n</string>
							<key>name</key>
							<string>invalid.string.newline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-interp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>r"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\|r)'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.interpolated.single.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-interp</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>r'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.dart</string>
	<key>uuid</key>
	<string>958518BC-799F-477A-99F9-5B28EBF230F6</string>
</dict>
</plist>
